volumes:
  curtdbv:

services: 

  # ///////////////////////////////////////////# 
  #              CURTAIL CONFIG                #
  # ///////////////////////////////////////////# 

  curtail: # DO NOT CHANGE
    environment:
      CURTAIL_PATH: '/home/curtail/private'
      DATABASE_URL: 'postgres://postgres:3HGJI6hJclYleHhkra+qUg@curtdb/curtail'
      VCAP_SERVICES: '{}'
#    image: registry.kube.curtailsecurity.com/curtail/regrade/curtail-sensor:master
    image: curtail.azurecr.io/curtail-sensor:latest
    volumes:
      - ./private:/home/curtail/private
    cap_add:
      - IPC_LOCK
      - SYS_PTRACE
    networks:
      securenet:
        aliases:
          - securenet_curtail
      pubnet:
        aliases:
          - pubnet_curtail
    links:
      - nginx
      - envoy
      - curtdb:curtdb
    ports:
      - "10081:80"
      - "4317:4317"
    restart: always

  curtui: 
    image: curtail.azurecr.io/curtail-ui:latest
    user: 0:0
    environment:
      CURTAIL_HTTPS_PORT: 4430
      DATABASE_URL: 'postgres://postgres:3HGJI6hJclYleHhkra+qUg@curtdb/curtail'
      DOCKER_NETWORK: cloudflare_securenet
    volumes:
      - ./private:/home/curtail/private
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      securenet:
        aliases:
          - curtui
    ports:
      - "14430:4430"
      - "18080:8080" 
    restart: always

  curtdb: # DO NOT CHANGE
    image: postgres:13.2
    environment:
      POSTGRES_PASSWORD: 3HGJI6hJclYleHhkra+qUg
      POSTGRES_DB: curtail
    ports:
      - "5434:5432"
    volumes:
      - curtdbv:/var/lib/postgresql/data
    networks:
      securenet:
        aliases:
          - curtdb
    restart: always

  # ///////////////////////////////////////////# 
  #                AFRL CONFIG                 #
  # ///////////////////////////////////////////# 

  nginx:
    build:
      context: .
      dockerfile: <your dockerfile>
      args: # pass args to dockerfile
        SERVERFILE: <your server>
        WKG_DIR: <your staging directory>
        PORT: 80
    image: staging_curtail_template
    ports:
      - 8008:80 # when running client, connect to DEMOPORT not this
    networks:
      securenet:

  envoy:
    build:
      context: .
      dockerfile: <your dockerfile>
      args:
        SERVERFILE: <your server>
        WKG_DIR: <your dev directory>
        PORT: 80
    image: dev_curtail_template
    ports:
      - 8009:80 # same port as above
    networks: #specific to docker
      securenet:

networks:
  securenet:
  pubnet:
